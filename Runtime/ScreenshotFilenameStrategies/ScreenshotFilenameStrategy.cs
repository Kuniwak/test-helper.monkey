// Copyright (c) 2023 Koji Hasegawa.
// This software is released under the MIT License.

using System.IO;
using System.Runtime.CompilerServices;
using UnityEngine;
#if UNITY_INCLUDE_TESTS
using NUnit.Framework;
#endif

namespace TestHelper.Monkey.ScreenshotFilenameStrategies
{
    public static class ScreenshotFilenameStrategy
    {
        /// <summary>
        ///     Create a file path for the specified unique identifier. Filename will be <c>$"{filenamePrefix}_{uniqueID}.png"</c>
        /// </summary>
        /// <param name="directory">Directory for screenshot images</param>
        /// <param name="filenamePrefix">Filename prefix for screenshot images</param>
        /// <param name="callerMemberName">
        ///     Caller member name that is generated by <c cref="CallerMemberNameAttribute" /> at
        ///     anywhere
        /// </param>
        /// <param name="uniqueID">Unique identifier</param>
        /// <returns></returns>
        public static ScreenshotOptions.FilePath CreateFilePath(
            string directory,
            string filenamePrefix,
            string callerMemberName,
            string uniqueID
        )
        {
            if (string.IsNullOrEmpty(directory))
            {
                directory = GetDefaultDirectory();
            }

            if (string.IsNullOrEmpty(filenamePrefix))
            {
                filenamePrefix = GetDefaultFilenamePrefix(callerMemberName);
            }

            return new ScreenshotOptions.FilePath(directory, $"{filenamePrefix}_{uniqueID}.png");
        }

        /// <summary>
        ///     Default directory for screenshot images
        /// </summary>
        /// <returns>Path like <c>Path.Combine(Application.persistentDataPath, "TestHelper.Monkey", "Screenshots")</c></returns>
        public static string GetDefaultDirectory()
        {
            return Path.Combine(Application.persistentDataPath, "TestHelper.Monkey", "Screenshots");
        }


#if UNITY_INCLUDE_TESTS
        /// <summary>
        ///     Default filename prefix for screenshot images that using current test names
        /// </summary>
        /// <returns>File name prefix that is unique to test cases</returns>
        public static string GetDefaultFilenamePrefixOnTest()
        {
            return TestContext.CurrentTestExecutionContext.CurrentTest.Name
                .Replace('(', '_')
                .Replace(')', '_')
                .Replace(',', '-');
        }
#endif

        /// <summary>
        ///     Default filename prefix for screenshot images
        ///     <remarks>
        ///         It become same as the file name created under ActualImages of the Graphics Tests Framework package if
        ///         <c>UNITY_INCLUDE_TESTS</c> is defined
        ///     </remarks>
        /// </summary>
        /// <param name="callerMemberName">Caller member name generated by <c cref="CallerMemberNameAttribute" /> at anywhere</param>
        public static string GetDefaultFilenamePrefix(string callerMemberName) =>
#if UNITY_INCLUDE_TESTS
            GetDefaultFilenamePrefixOnTest();
#else
            callerMemberName;
#endif
    }
}
